/*

  Nullsoft WASABI Source File License

  Copyright 1999-2001 Nullsoft, Inc.

    This software is provided 'as-is', without any express or implied
    warranty.  In no event will the authors be held liable for any damages
    arising from the use of this software.

    Permission is granted to anyone to use this software for any purpose,
    including commercial applications, and to alter it and redistribute it
    freely, subject to the following restrictions:

    1. The origin of this software must not be misrepresented; you must not
       claim that you wrote the original software. If you use this software
       in a product, an acknowledgment in the product documentation would be
       appreciated but is not required.
    2. Altered source versions must be plainly marked as such, and must not be
       misrepresented as being the original software.
    3. This notice may not be removed or altered from any source distribution.


  Brennan Underwood
  brennan@nullsoft.com

*/

/* This file was generated by Maki Compiler, do not edit manually */

#ifndef __HOOK_GUIOBJECT_H
#define __HOOK_GUIOBJECT_H

#include "h_rootobj.h"

#define H_GUIOBJECT_PARENT H_RootObject

class COMEXP H_GuiObject : public H_GUIOBJECT_PARENT {

public:

  H_GuiObject(ScriptObject *o);
  H_GuiObject();
  virtual ~H_GuiObject();
  virtual void H_hook(ScriptObject *o);
  ScriptObject *getHookedObject();

  virtual int eventCallback(ScriptObject *object, int dlfid, scriptVar **params, int nparams);
  virtual void hook_onSetVisible(int onoff) {  }
  virtual void hook_onLeftButtonUp(int x, int y) {  }
  virtual void hook_onLeftButtonDown(int x, int y) {  }
  virtual void hook_onRightButtonUp(int x, int y) {  }
  virtual void hook_onRightButtonDown(int x, int y) {  }
  virtual void hook_onRightButtonDblClk(int x, int y) {  }
  virtual void hook_onLeftButtonDblClk(int x, int y) {  }
  virtual void hook_onMouseMove(int x, int y) {  }
  virtual void hook_onEnterArea() {  }
  virtual void hook_onLeaveArea() {  }
  virtual void hook_onEnable(int onoff) {  }
  virtual void hook_onResize(int x, int y, int w, int h) {  }
  virtual void hook_onTargetReached() {  }
  virtual void hook_onChar(const char *c) {  }
  virtual void hook_onKeyDown(int vk_code) {  }
  virtual void hook_onKeyUp(int vk_code) {  }

  private:

  ScriptObject *obj;
  int inited;
  static int loaded;
  static int onsetvisible_id;
  static int onleftbuttonup_id;
  static int onleftbuttondown_id;
  static int onrightbuttonup_id;
  static int onrightbuttondown_id;
  static int onrightbuttondblclk_id;
  static int onleftbuttondblclk_id;
  static int onmousemove_id;
  static int onenterarea_id;
  static int onleavearea_id;
  static int onenable_id;
  static int onresize_id;
  static int ontargetreached_id;
  static int onchar_id;
  static int onkeydown_id;
  static int onkeyup_id;
};

#endif
