// ----------------------------------------------------------------------------
// Generated by SourceSink Factory - DO NOT EDIT
// 
// File        : ../sourcesink/XUIObjectEventSource.h
// Class       : XUIObject
// class layer : Event Source for XUIObject
// ----------------------------------------------------------------------------

#ifndef XUIOBJECTEVENTSOURCE_H
#define XUIOBJECTEVENTSOURCE_H

#include <bfc/eventsource.h>

class XUIDndSession;
class XUIObject;

class XUIObjectEventSink;

// ----------------------------------------------------------------------------

class XUIObjectEventSource {
  protected:
    XUIObjectEventSource() {}
    virtual ~XUIObjectEventSource() {}
  
  public:
    void eventSource_onAttributeChanged(const char *attributeName, const char *attributeValue);
    void eventSource_onBeginDrag(XUIDndSession *s);
    void eventSource_onEndDrag(XUIDndSession *s, bool success);
    void eventSource_onDragEnter(XUIDndSession *dndSession);
    void eventSource_onDragLeave(XUIDndSession *dndSession);
    void eventSource_onDragOver(XUIDndSession *dndSession, int x, int y);
    void eventSource_onDragDrop(XUIDndSession *dndSession, int x, int y);
    void eventSource_onInit();
    void eventSource_onDestroy();
    void eventSource_onResize();
    void eventSource_onLeftButtonDown(int x, int y);
    void eventSource_onLeftButtonUp(int x, int y);
    void eventSource_onRightButtonDown(int x, int y);
    void eventSource_onRightButtonUp(int x, int y);
    void eventSource_onMiddleButtonDown(int x, int y);
    void eventSource_onMiddleButtonUp(int x, int y);
    void eventSource_onMouseWheelDown(int click, int lines);
    void eventSource_onMouseWheelUp(int click, int lines);
    void eventSource_onMouseMove(int x, int y);
    void eventSource_onMouseEnter();
    void eventSource_onMouseLeave();
    void eventSource_onGetFocus();
    void eventSource_onLoseFocus();
    void eventSource_onShow();
    void eventSource_onHide();
    void eventSource_onActivate();
    void eventSource_onDeactivate();
    void eventSource_onEnable();
    void eventSource_onDisable();
    void eventSource_onChar(unsigned int c);
    void eventSource_onKeyDown(unsigned int keyCode);
    void eventSource_onKeyUp(unsigned int keyCode);
    void eventSource_onMinimize();
    void eventSource_onRestore();
    void eventSource_onMaximize();
    void eventSource_onCancelCapture();
    
    void registerXUIObjectEventSink(XUIObjectEventSink *sink) { m_sinks.addItem(sink); }
    void unregisterXUIObjectEventSink(XUIObjectEventSink *sink) { m_sinks.removeItem(sink); }
  
  private:
    PtrList<XUIObjectEventSink> m_sinks;
};

#endif // XUIOBJECTEVENTSOURCE_H
