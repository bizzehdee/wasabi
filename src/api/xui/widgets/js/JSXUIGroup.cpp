// ----------------------------------------------------------------------------
// Generated by JSScriptable Factory - DO NOT EDIT
// 
// File        : ../js/JSXUIGroup.cpp
// Class       : XUIGroup
// class layer : Javascript Dispatcher
// ----------------------------------------------------------------------------

#include "precomp.h"
#include "JSXUIGroup.h"
#include "..\xuigroup.h"

#include "..\xuiobject.h"

#pragma warning(push)
#pragma warning(disable: 4800)


JSXUIGroup::JSXUIGroup() {
  XUIGroup *pthis = (static_cast<XUIGroup *>(this));
  pthis->js_addInterface(JS_XUIGroup_GUID, pthis);
  pthis->js_addClassDescriptor(&JSXUIGroup::classDescriptor);
  pthis->js_addFunctionTable(JSXUIGroup::functionTable);
  jsSink = new JSXUIGroupEventSink(this);
  jsSink->eventSink_registerTo(pthis);
}

JSXUIGroup::~JSXUIGroup() {
  delete jsSink;
}

JSClass JSXUIGroup::classDescriptor = {
  "XUIGroup", JSCLASS_HAS_PRIVATE,
  JS_PropertyStub, JS_PropertyStub, JS_PropertyStub, JS_PropertyStub,
  JS_EnumerateStub, JS_ResolveStub, JS_ConvertStub, JS_FinalizeStub,
  JSCLASS_NO_OPTIONAL_MEMBERS
};

JSFunctionSpec JSXUIGroup::functionTable[] = {
  {"getContent", JSXUIGroup::fromjs_getContent, 0, 0, 0},
  {0,0,0,0,0},
};

JSBool JSXUIGroup::fromjs_getContent(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval) {
  // get instance
  XUIGroup *object = static_cast<XUIGroup *>(reinterpret_cast<JSScriptable *>(JS_GetPrivate(cx, obj)));
  if (!object) {
    JSScriptable::js_throwNullCallException(JSXUIGroup::classDescriptor.name, JSXUIGroup::functionTable[0].name);
    return JS_FALSE;
  }
  // record context
  object->js_setCurrentContext(cx);
  // call method
  ASSERT(object != NULL);
  XUIObject * rv = object->getContent();
  // handle return value
  if (!rv) *rval = JSVAL_VOID;
  else *rval = OBJECT_TO_JSVAL(rv->js_getJSObject(cx));
  // success
  return JS_TRUE;
}

// ----------------------------------------------------------------------------


